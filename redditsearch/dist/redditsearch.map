{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortby","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","addEventListener","value","sortBy","querySelector","showMessage","results","output","forEach","image","post","preview","images","source","url","title","shortText","selftext","subreddit","score","innerHTML","e","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"redditsearch.map","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortby) {\n    return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortby}&limit=${searchLimit}`)\n    .then(res => res.json())\n    .then(data => data.data.children.map(data => data.data))\n    .catch(err => console.log(err));\n  }\n}\n","import reddit from './redditapi'\n\nconst searchForm = document.getElementById('search-form')\nconst searchInput = document.getElementById('search-input')\n\n// Form Event Listener\nsearchForm.addEventListener('submit', e => {\n  // Get Search Term\n  const searchTerm = searchInput.value;\n  // Get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value\n  // Get limit\n  const searchLimit = document.getElementById('limit').value\n  // Check input\n  if (searchTerm === '') {\n    // Show Message\n    showMessage('Please add a search term', 'alert-danger')\n  }\n\n  // Clear Input\n  // searchInput.value = '';\n\n  // Search Reddit\n  reddit.search(searchTerm, searchLimit, sortBy).then\n  (results => {\n    console.log(results);\n      let output = '<div class=\"card-columns\">'\n      // Loop through posts\n      results.forEach(post => {\n        // check for image\n        const image = post.preview ? post.preview.images[0].source.url : `https://upload.wikimedia.org/wikipedia/en/thumb/8/82/Reddit_logo_and_wordmark.svg/1200px-Reddit_logo_and_wordmark.svg.png`\n        output += `\n      <div class=\"card\">\n          <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n        <div class=\"card-body\">\n              <h5 class=\"card-title\">${post.title}</h5>\n            <p class=\"card-text\">${shortText(post.selftext, 100)}</p>\n          <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n            <hr>\n            <span class=\"badge badge-secondary\">Subbreddit: ${post.subreddit}</span>\n            <span class=\"badge badge-dark\">Score: ${post.score}</span>\n            </div>\n          </div>\n    `\n      })\n      output += '</div>'\n      document.getElementById('results').innerHTML = output;\n    })\n  e.preventDefault()\n})\n\n//Show Message\nfunction showMessage(message, className) {\n  //Create div\n  const div = document.createElement('div')\n  // Add Class\n  div.className = `alert ${className}`\n  // Add Text\n  div.appendChild(document.createTextNode(message))\n  //Get Parent Container\n  const searchContainer = document.getElementById('search-container')\n  // Get Search\n  const search = document.getElementById('search')\n\n  //Insert Message\n  searchContainer.insertBefore(div, search)\n\n  // Timeout alert\n  setTimeout(() => document.querySelector('.alert').remove(), 3000)\n}\n\n//Short the text\nfunction shortText(text,limit) {\n  const shortened = text.indexOf(' ', limit)\n  if(shortened == -1) return text;\n  return text.substring(0, shortened)\n}\n"]}